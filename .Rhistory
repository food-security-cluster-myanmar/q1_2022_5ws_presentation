"FFS and farmer training",
activity == "Provide technical training" ~ "vocational training",
activity_description %in% c("Provide Voucher Cards to buy agriculture inputs for their agricultural works",
"Cash for farming (Livestock and Agri)") ~
"provision of crop, vegetable and seed kits",
TRUE ~ NA_character_)) %>%
mutate(activity_red = case_when(activity_new %in% c("food distributions (in kind/voucher/cash), moderate",
"food distributions (in kind/voucher/cash), severe") ~
"food distribution",
activity_new %in% c("multi-purpose cash transfer (MPC), moderate",
"multi-purpose cash transfer (MPC), severe") ~
"multi-purpose cash transfer",
activity == "livelihoods vocational training" ~ "vocational training",
activity == "food/cash for work/assets" ~ "food_cash for work_assets",
activity == "income-generating activities and small grants" ~ "IGA and small grants",
TRUE ~ activity_new)) %>%
mutate(strat_obj = case_when(activity_red %in% c("food distribution", "multi-purpose cash transfer") &
beneficiary_type == "Internally Displaced" ~
"so_1",
activity_red %in% c("food distribution", "multi-purpose cash transfer") &
beneficiary_type != "Internally Displaced" ~
"so_2",
TRUE ~ "so_3")) %>%
mutate(activity_red = recode(activity_red,
"food/cash for work/assets" = "food_cash for work_assets",
"provision of crop, vegetable and seed kits" = "crop, vegetable and seed kits",
"provision of livestock kits" = "livestock kits",
"income-generating activities and small grants" = "IGA and small grants"),
activity_red = str_remove_all(activity_red, "provision of "))
# shapefiles
pcode3_shape <- st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
filter(gap < 0)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0) %>%
head(20)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0) %>%
head(20) %>%
kable(caption = "20 most oversubscribed townships", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(desc(gap)) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
head(20) %>%
kable(caption = "20 townships with largest gaps", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
filter(reached_pc == 9) %>%
arrange(desc(gap)) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
head(20) %>%
kable(caption = "20 townships with largest gaps", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
filter(reached_pc == 0) %>%
arrange(desc(gap)) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
head(20) %>%
kable(caption = "20 townships with largest gaps", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
arrange(desc(gap)) %>%
head(20) %>%
kable(caption = "20 townships with largest gaps", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
arrange(desc(gap))
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
arrange(desc(gap))
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(beneficiaries == 0) %>%
arrange(desc(gap)) %>%
head(20) %>%
kable(caption = "20 townships with largest gaps", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(state) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("state" = "state")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(beneficiaries == 0) %>%
arrange(desc(gap)) %>%
head(20) %>%
kable(caption = "20 townships with largest gaps", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(state) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin %>% group_by(state) %>%
summarise(fs_targeted = sum(fs_targeted, na.rm = TRUE)),
by = c("state" = "state")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(beneficiaries == 0) %>%
arrange(desc(gap)) %>%
head(20) %>%
kable(caption = "20 townships with largest gaps", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(state) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin %>% group_by(state) %>%
summarise(fs_targeted = sum(fs_targeted, na.rm = TRUE)),
by = c("state" = "state")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
select(state, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(beneficiaries == 0) %>%
arrange(desc(gap)) %>%
head(20) %>%
kable(caption = "20 townships with largest gaps", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(state) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin %>% group_by(state) %>%
summarise(fs_targeted = sum(fs_targeted, na.rm = TRUE)),
by = c("state" = "state")) %>%
replace_na(list(beneficiaries = 0))
fsc %>%
group_by(state) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin %>% group_by(state) %>%
summarise(fs_targeted = sum(fs_targeted, na.rm = TRUE)),
by = c("state" = "state")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
select(state, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
arrange(desc(gap)) %>%
head(20) %>%
kable(caption = "20 townships with largest gaps", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0) %>%
head(20) %>%
kable(caption = "20 most oversubscribed townships", format.args = list(big.mark = ","),
format = "html", table.attr = "style = 'height:80%'") %>%
kable_classic_2("striped")
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0) %>%
head(20) %>%
kable(caption = "20 most oversubscribed townships", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
save_kable(file = "oversubscribed_townships.png", zoom = 2)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0 & `%_reached` >= 100)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneiciaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0 & `%_reached` >= 100) %>%
kable(caption = "Most oversubscribed townships", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
save_kable(file = "oversubscribed_townships.png", zoom = 2)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0 & `%_reached` >= 100) %>%
mutate(target = recode(target, 1 = 0)) %>%
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0 & `%_reached` >= 100) %>%
mutate(target = recode(target, `1` = `0`)) %>%
kable(caption = "Most oversubscribed townships", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0 & `%_reached` >= 100) %>%
mutate(target = recode(target, 1L = 0L)) %>%
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0 & `%_reached` >= 100)
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0 & `%_reached` >= 100) %>%
mutate(target = recode(target, 1 = 0))
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0 & `%_reached` >= 100) %>%
mutate(target = ifelse(target == 1, 0, target)) %>%
kable(caption = "Most oversubscribed townships", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped")
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0 & `%_reached` >= 100) %>%
mutate(target = ifelse(target == 1, 0, target)) %>%
kable(caption = "Most oversubscribed townships", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
save_kable(file = "oversubscribed_townships.png")
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
reached_pc = round(reached_pc * 100, digits = 2),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0),
gap = fs_targeted - beneficiaries) %>%
arrange(gap) %>%
select(state, township, target = fs_targeted, beneficiaries, gap, `%_reached` = reached_pc, partners) %>%
filter(gap < 0 & `%_reached` >= 100) %>%
mutate(target = ifelse(target == 1, 0, target),
gap = ifelse(target == 0, gap - 1, gap)) %>%
kable(caption = "Most oversubscribed townships", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
save_kable(file = "oversubscribed_townships.png", zoom = 2)
